1) 
	i) List: It is a collection of items that consist of data and a pointer which points to the next item in the list. There would typically be a "head" which points to the first item and the last item would point to NULL.
	ii) Stack: It is a data structure in which items are inserted and removed in a last in, first out order.
	iii) Queue: It is a data structure in which items are inserted and removed in a first in, first out order.
	iv) Dictionary: This is a data structure which holds a key and any satellite data associated with that key.

2) log2(n) times. As a binary search would eliminate half of the items with every check, log2(n) is the times we are able to divide by 2 before reaching the item being searched for. 

3) A linear search will check every item in the array to see if it is the value being searched for. So it will execute a comparison n times.

4) A suuitable use for linear search is when searching unsorted lists.

5) 
*84* 37 93 82 98 27 63 73 93 27 75 55 45 8
37 82 27 63 73 27 75 55 45 8 *84* 93 98 93
*37* 82 27 63 73 27 75 55 45 8	 84 	*93* 98 93
27 27 8 *37* 82 63 73 75 55 45 	 84   *93* 98 93
*27* 27 8   37   *82* 63 73 75 55 45   84   93   *98* 93
8 *27* 27		37   63 73 75 55 45 *82*   84   93   93 *98*
8   27   27   37   *63* 73 75 77 45   82   84   93   93   98
8   27   27   37   45 *63* 73 75 77   82   84   93   93   98
8   27   27   37   45   63   *73* 75 77   82   84   93   93   98
8   27   27   37   45   63   73   *75* 77   82   84   93   93   98
8   27   27   37   45   63   73   75   77   82   84   93   93   98

6) L->3->24->06 

7) L ->[13,[28,[24,[3, None]]]]

8) The difference in output is due to the pointer s being reinitialized and re-allocated 100 bytes of memory, while buffer remains unchanged and then copying the contents of buffer into s. The reason the final set of output is different to the second set is because s is not being pointed directly at the buffer, so changing s will not change the contents of buffer.

9)
Key - Value
3 - [Cos,86]->[Bob, 38]
4 - [Jaga,24]->[Kate,28]->[Nash,11]->[Vera,99]
5 - [Jesse,78]
